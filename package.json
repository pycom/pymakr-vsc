{
  "name": "pymakr-preview",
  "displayName": "Pymakr - Preview",
  "publisher": "Pycom",
  "description": "Official Pymakr plugin for Pycom devices.",
  "version": "2.22.4",
  "repository": {
    "url": "https://github.com/pycom/pymakr-vsc"
  },
  "preview": true,
  "engines": {
    "vscode": "^1.67.0",
    "node": "^16.13.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "icon": "media/pycom.png",
  "vsce": {
    "baseImagesUrl": "https://raw.githubusercontent.com/pycom/pymakr-vsc/next/"
  },
  "contributes": {
    "configuration": [
      {
        "title": "General",
        "properties": {
          "pymakr.ignore": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              ".vscode",
              ".gitignore",
              ".git",
              "env",
              "venv"
            ],
            "description": "Files to be ignored by Pymakr."
          },
          "pymakr.advancedMode": {
            "type": "boolean",
            "default": false,
            "description": "Prompts on actions instead of using defaults."
          },
          "pymakr.terminalProfile": {
            "type": "string",
            "default": "auto",
            "description": "Override the default terminal client.",
            "enum": [
              "auto",
              "native"
            ],
            "enumDescriptions": [
              "Defaults to client.js if Node is available, otherwise uses native client file.",
              "Use a prebuilt native client file"
            ]
          }
        }
      },
      {
        "title": "Debug",
        "properties": {
          "pymakr.debug.logLevel": {
            "type": "string",
            "default": "info",
            "enum": [
              "fatal",
              "error",
              "warn",
              "info",
              "debugShort",
              "debug",
              "traceShort",
              "trace"
            ],
            "enumDescriptions": [
              "Plugin breaking errors",
              "Errors",
              "Warnings",
              "General plugin information",
              "Short debug messages",
              "Long debug messages",
              "Trace without stacktrace",
              "Trace with stacktrace"
            ],
            "description": "Defaults to 'info'. Logs can be read the PyMakr Output Channel (ctrl + shift u), or in the developer tools (ctrl + shift i)."
          },
          "pymakr.debug.logFilter": {
            "type": "string",
            "description": "Regular expression. If not empty, only logs matching the filter will be displayed.",
            "examples": [
              ".*terminal.*"
            ]
          }
        }
      },
      {
        "title": "Devices",
        "properties": {
          "pymakr.devices.autoConnect": {
            "type": "string",
            "enum": [
              "always",
              "never",
              "onLostConnection",
              "lastState"
            ],
            "enumDescriptions": [
              "Always auto connect to devices.",
              "Never auto connect to devices.",
              "Only auto connect to devices if connection was previously lost.",
              "Auto connect to devices that were never manually disconnected."
            ],
            "default": "lastState",
            "description": "When to connect devices automatically. Setting can be superseded on device level, by right clicking the device and selecting 'config'."
          },
          "pymakr.devices.include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "manufacturer=Pycom.*",
              "manufacturer=FTDI",
              "manufacturer=Microsoft",
              "manufacturer=Microchip Technology.*",
              "friendlyName=.*CH34[01].*",
              "friendlyName=.*CP21.*",
              "manufacturer=(?!undefined)"
            ],
            "description": "Filter devices to include in the devices list. Uses regular expression. Matches can be done against any property, eg. \"Microsoft\" or against a specific property, eg. \"manufacturer=Microsoft\r\n\r\nFor a list of available devices, run the command \"list devices\"."
          },
          "pymakr.devices.exclude": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Same as Devices: Include, but for exclude. Excluded devices will not show, even if listed in the include list."
          },
          "pymakr.devices.nameTemplate": {
            "type": "string",
            "default": "{displayName} / {projectName}",
            "description": "Available variables: friendlyName, locationId, manufacturer, pnpId, productId, serialNumber, vendorId, protocol, displayName, projectName"
          },
          "pymakr.devices.configs": {
            "type": "object",
            "description": "Configuration of each individual device.",
            "additionalProperties": {
              "type": "object",
              "readOnly": false,
              "properties": {
                "autoConnect": {
                  "type": "string",
                  "enum": [
                    "always",
                    "never",
                    "onLostConnection",
                    "lastState"
                  ],
                  "enumDescriptions": [
                    "Always auto connect to devices.",
                    "Never auto connect to devices.",
                    "Only auto connect to devices if connection was previously lost.",
                    "Auto connect to devices that were never manually disconnected."
                  ],
                  "description": "When to connect devices automatically. Setting can be superseded on device level, by right clicking the device and selecting 'config'."
                },
                "name": {
                  "type": "string",
                  "description": "name of device."
                },
                "username": {
                  "type": "string",
                  "description": "Not currently used."
                },
                "password": {
                  "type": "string",
                  "description": "Not currently used."
                },
                "hidden": {
                  "type": "boolean",
                  "description": "Hide device from showing in the devices view."
                },
                "rootPath": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Commonly \"/flash\", \"/\" or \"/sd\"."
                },
                "id": {
                  "type": "string",
                  "description": "ID of device. Do not change unless you know what you're doing."
                },
                "adapterOptions": {
                  "type": "object",
                  "description": "Options for the device adapter",
                  "properties": {
                    "chunkSize": {
                      "type": "number",
                      "default": null,
                      "description": "Large scripts and files are partitioned into smaller chunks when sent to the device. 100-3000 should work for most devices."
                    },
                    "chunkDelay": {
                      "type": "number",
                      "default": null,
                      "description": "Some devices need a delay between chunks."
                    }
                  }
                }
              }
            }
          },
          "pymakr.projects.runScriptPrompt": {
            "type": "boolean",
            "default": "true",
            "description": "Prompt which devices to use before running a script in a project. If set to false, scripts will run on all connected devices in a project."
          }
        }
      },
      {
        "title": "Misc",
        "properties": {
          "pymakr.misc.notifications": {
            "description": "Stored choices for Pymakr notifications. To undo a choice, simply delete the entry.",
            "type": "object",
            "additionalProperties": "/.+/"
          }
        }
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "pymakr.conf",
        "url": "./pymakr.schema.json"
      }
    ],
    "languages": [
      {
        "id": "json",
        "filenamePatterns": [
          "pymakr.conf"
        ]
      }
    ],
    "terminal": {
      "profiles": [
        {
          "id": "pymakr.terminal-profile",
          "title": "PyMakr"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "pymakr",
          "title": "PyMakr",
          "icon": "media/pycom.svg"
        }
      ]
    },
    "views": {
      "pymakr": [
        {
          "id": "pymakr-home-view",
          "name": "Pymakr Home",
          "type": "webview"
        },
        {
          "id": "pymakr-devices-tree",
          "name": "Devices",
          "icon": "media/pycom.svg",
          "contextualTitle": "Pymakr",
          "type": "tree"
        }
      ],
      "explorer": [
        {
          "id": "pymakr-projects-tree",
          "name": "Pymakr: Projects",
          "icon": "media/pycom.svg",
          "type": "tree"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "pymakr-get-started",
        "title": "Pymakr 2 - Getting Started",
        "description": "A small walkthrough for getting started with Pymakr 2",
        "steps": [
          {
            "id": "createProject",
            "title": "Create a Project",
            "description": "Projects are folders that are optimized for synchronizing your codebase to your devices.\n\n[Create project](command:pymakr.createProjectPrompt)",
            "media": {
              "image": "media/readme/create-project.gif",
              "altText": "Create project"
            },
            "completionEvents": [
              "onCommand:pymakr.createProject",
              "onCommand:pymakr.createProjectInFolderPrompt",
              "onCommand:pymakr.createProjectPrompt"
            ]
          },
          {
            "id": "connectDevice",
            "title": "Connect a Device",
            "description": "Connecting a device will allow us to open its terminal, sync files and mount it as a storage device.",
            "media": {
              "image": "media/readme/connect-device.gif",
              "altText": "Connect devices"
            },
            "completionEvents": [
              "onCommand:pymakr.connect"
            ]
          },
          {
            "id": "uploadProject",
            "title": "Sync a Project to a Device",
            "description": "To get the code onto the device, we need to sync the project. If you have already connected a device you can skip the relevant steps.",
            "media": {
              "image": "media/readme/connect-device-and-sync-up.gif",
              "altText": "Upload project"
            },
            "completionEvents": [
              "onCommand:pymakr.uploadProject"
            ]
          },
          {
            "id": "organizeViews",
            "title": "Organize Pymakr views",
            "description": "By default, Pymakr's views reside in the Pymakr tab. We recommend moving these to a tab that fits your workflow. You can also move the entire tab.",
            "media": {
              "image": "media/readme/move-view.gif",
              "altText": "Connect devices"
            }
          },
          {
            "id": "readyToRock",
            "title": "Ready to rock",
            "description": "This concludes our short walkthrough. If you have questions or would like to follow the development, come visit us on our [repo](https://github.com/pycom/pymakr-vsc).",
            "media": {
              "image": "media/readme/move-view.gif",
              "altText": "Connect devices"
            }
          }
        ]
      }
    ],
    "viewsWelcome": [
      {
        "view": "pymakr-projects-tree",
        "contents": "No Pymakr projects were found in the current workspace. Please add a project or open an existing workspace.\nPymakr 2 uses [multi-root workspaces](https://code.visualstudio.com/docs/editor/workspaces#_multiroot-workspaces) to allow easy access to both project files and devices.\n\n[Create project](command:pymakr.createProjectPrompt)\n\n[Open Workspace](command:workbench.action.openWorkspace)"
      },
      {
        "view": "pymakr-devices-tree",
        "contents": "No devices could be found.\n\n[Unhide a hidden device](command:pymakr.setVisibleDevices)\n\n[List all devices](command:pymakr.listDevices)"
      }
    ],
    "commands": [
      {
        "command": "pymakr.openWalkthrough",
        "title": "Open the Pymakr walkthrough",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.showMarkdownDocument",
        "title": "Show a markdown document",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.debug.showDeviceSummary",
        "title": "Show device summary",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.showDebugMenu",
        "title": "Shows debugging menu",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.openOnDevice",
        "title": "Open file on device",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.logState",
        "title": "[DEBUG] Logs current state to the terminal",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.listDevices",
        "title": "List devices",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.safeBootDevice",
        "title": "Safe boot device",
        "category": "PyMakr",
        "enablement": "viewItem =~ /(idle|busy)#.+#device/"
      },
      {
        "command": "pymakr.resetDevice",
        "title": "Hard reset device",
        "category": "PyMakr",
        "enablement": "viewItem =~ /(idle)#.+#device/"
      },
      {
        "command": "pymakr.softResetDevice",
        "title": "Soft reset device",
        "category": "PyMakr",
        "enablement": "viewItem =~ /(idle)#.+#device/"
      },
      {
        "command": "pymakr.stopScript",
        "title": "Stop script",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.eraseDevicePrompt",
        "title": "Erase device",
        "category": "PyMakr",
        "enablement": "viewItem =~ /(idle)#.+#device/"
      },
      {
        "command": "pymakr.getPymakr",
        "title": "get Pymakr instance (for extension development)",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.showTerminalHistory",
        "title": "Open terminal history",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.createProjectInFolderPrompt",
        "title": "Create project in folder",
        "icon": "$(plus)",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.createProjectPrompt",
        "title": "Create new project",
        "icon": "$(plus)",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.configureDevice",
        "title": "Configure device",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.connect",
        "title": "Connect device",
        "icon": "$(zap)",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.stopAllInProject",
        "title": "Stop all busy devices",
        "icon": "$(stop)",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.connectAllInProject",
        "title": "Connect all devices",
        "icon": "$(zap)",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.disconnectAllInProject",
        "title": "Disconnect all devices",
        "icon": "$(debug-disconnect)",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.startDevMode",
        "title": "Start development mode\r\nAutomatically uploads/deletes changed files and restarts the device.",
        "shortTitle": "Start dev mode",
        "icon": {
          "dark": "./media/dark/dev-dark.svg",
          "light": "./media/light/dev-light.svg"
        },
        "category": "PyMakr"
      },
      {
        "command": "pymakr.stopDevMode",
        "title": "Stop development mode",
        "shortTitle": "Stop dev mode",
        "icon": {
          "dark": "./media/dark/dev-cross-dark.svg",
          "light": "./media/light/dev-cross-light.svg"
        },
        "category": "PyMakr"
      },
      {
        "command": "pymakr.addDeviceToFileExplorer",
        "title": "Open device in file explorer",
        "icon": "$(folder)",
        "category": "PyMakr",
        "enablement": "viewItem =~ /idle#.+#device/"
      },
      {
        "command": "pymakr.newDeviceSerial",
        "title": "Serial",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.newDeviceTelnet",
        "title": "Telnet",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.newDeviceWS",
        "title": "WebSocket",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.setVisibleDevices",
        "title": "Set visible devices",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.createTerminalPrompt",
        "title": "Create terminal",
        "icon": "$(terminal-view-icon)",
        "category": "PyMakr",
        "enablement": "viewItem =~ /(idle|busy)#.+#device/"
      },
      {
        "command": "pymakr.disconnect",
        "title": "Disconnect device",
        "icon": "$(debug-disconnect)",
        "category": "PyMakr",
        "enablement": "viewItem =~ /(idle|busy)#.+#device/"
      },
      {
        "command": "pymakr.downloadProject",
        "shortTitle": "Download",
        "title": "Download project from device",
        "icon": "$(cloud-download)",
        "category": "PyMakr",
        "enablement": "viewItem =~ /idle#project#device/"
      },
      {
        "command": "pymakr.uploadProject",
        "shortTitle": "Upload",
        "title": "Sync project to device",
        "icon": "$(cloud-upload)",
        "category": "PyMakr",
        "enablement": "viewItem =~ /(^dev#.+|idle)#project#device/"
      },
      {
        "command": "pymakr.selectDevicesForProjectPrompt",
        "shortTitle": "$(plus)device",
        "title": "Select devices",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.uploadPrompt",
        "title": "Upload to device",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.runEditor",
        "title": "Run file or selection on device",
        "shortTitle": "Run",
        "enablement": "editorFocus",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.runFile",
        "title": "Run file on device",
        "shortTitle": "Run",
        "category": "PyMakr"
      },
      {
        "command": "pymakr.configureProject",
        "title": "Configure project",
        "category": "PyMakr"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+e",
        "command": "",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+f",
        "command": "",
        "when": "terminalFocus"
      },
      {
        "command": "pymakr.uploadPrompt",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s"
      },
      {
        "command": "pymakr.runEditor",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r"
      }
    ],
    "submenus": [
      {
        "id": "pymakr.newDeviceMenu",
        "label": "New device"
      },
      {
        "id": "pymakr.projectDeviceMenu",
        "icon": "$(ellipsis)",
        "label": "device"
      },
      {
        "id": "pymakr.deviceMenuDebug",
        "label": "Debug"
      },
      {
        "id": "pymakr.projectMenu",
        "icon": "$(ellipsis)",
        "label": "project"
      },
      {
        "id": "pymakr.editorContextMenu",
        "label": "pymakr"
      },
      {
        "id": "pymakr.explorerContextMenu",
        "label": "pymakr"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "pymakr.showMarkdownDocument",
          "when": "false"
        },
        {
          "command": "pymakr.listDevices"
        },
        {
          "command": "pymakr.createProjectPrompt"
        },
        {
          "command": "pymakr.eraseDevicePrompt",
          "when": "false"
        },
        {
          "command": "pymakr.createTerminalPrompt",
          "when": "false"
        },
        {
          "command": "pymakr.createProjectInFolderPrompt",
          "when": "false"
        },
        {
          "command": "pymakr.getPymakr"
        },
        {
          "command": "pymakr.uploadPrompt",
          "when": "false"
        },
        {
          "command": "pymakr.runEditor",
          "when": "false"
        },
        {
          "command": "pymakr.safeBootDevice",
          "when": "false"
        },
        {
          "command": "pymakr.resetDevice",
          "when": "false"
        },
        {
          "command": "pymakr.softResetDevice",
          "when": "false"
        },
        {
          "command": "pymakr.showTerminalHistory",
          "when": "false"
        },
        {
          "command": "pymakr.configureDevice",
          "when": "false"
        },
        {
          "command": "pymakr.connect",
          "when": "false"
        },
        {
          "command": "pymakr.addDeviceToFileExplorer",
          "when": "false"
        },
        {
          "command": "pymakr.newDeviceSerial",
          "when": "false"
        },
        {
          "command": "pymakr.newDeviceTelnet",
          "when": "false"
        },
        {
          "command": "pymakr.newDeviceWS",
          "when": "false"
        },
        {
          "command": "pymakr.setVisibleDevices",
          "when": "false"
        },
        {
          "command": "pymakr.disconnect",
          "when": "false"
        },
        {
          "command": "pymakr.downloadProject",
          "when": "false"
        },
        {
          "command": "pymakr.uploadProject",
          "when": "false"
        },
        {
          "command": "pymakr.selectDevicesForProjectPrompt",
          "when": "false"
        },
        {
          "command": "pymakr.uploadPrompt",
          "when": "false"
        },
        {
          "command": "pymakr.runEditor",
          "when": "false"
        },
        {
          "command": "pymakr.runFile",
          "when": "false"
        },
        {
          "command": "pymakr.configureProject",
          "when": "false"
        }
      ],
      "pymakr.newDeviceMenu": [
        {
          "command": "pymakr.newDeviceSerial"
        },
        {
          "command": "pymakr.newDeviceTelnet"
        },
        {
          "command": "pymakr.newDeviceWS"
        }
      ],
      "pymakr.projectMenu": [
        {
          "command": "pymakr.selectDevicesForProjectPrompt",
          "group": "1-primary",
          "when": "view == pymakr-projects-tree"
        },
        {
          "command": "pymakr.configureProject",
          "group": "1-primary"
        }
      ],
      "pymakr.projectDeviceMenu": [
        {
          "command": "pymakr.safeBootDevice",
          "group": "3-reset"
        },
        {
          "command": "pymakr.resetDevice",
          "group": "3-reset"
        },
        {
          "command": "pymakr.softResetDevice",
          "group": "3-reset"
        },
        {
          "command": "pymakr.stopScript",
          "group": "2-interact"
        },
        {
          "command": "pymakr.disconnect",
          "group": "1-primary"
        },
        {
          "command": "pymakr.eraseDevicePrompt",
          "group": "4-config"
        },
        {
          "command": "pymakr.configureDevice",
          "group": "4-config"
        },
        {
          "submenu": "pymakr.deviceMenuDebug",
          "group": "5-debug"
        }
      ],
      "pymakr.deviceMenuDebug": [
        {
          "command": "pymakr.debug.showDeviceSummary"
        },
        {
          "command": "pymakr.showTerminalHistory"
        }
      ],
      "pymakr.editorContextMenu": [
        {
          "command": "pymakr.runEditor",
          "group": "pymakr"
        },
        {
          "command": "pymakr.uploadPrompt",
          "group": "pymakr"
        },
        {
          "command": "pymakr.openOnDevice",
          "group": "pymakr",
          "when": "resourceScheme == file"
        }
      ],
      "pymakr.explorerContextMenu": [
        {
          "command": "pymakr.createProjectInFolderPrompt",
          "group": "pymakr",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "pymakr.runFile",
          "group": "pymakr",
          "when": "!explorerResourceIsFolder"
        },
        {
          "command": "pymakr.uploadPrompt",
          "group": "pymakr"
        },
        {
          "command": "pymakr.openOnDevice",
          "group": "pymakr",
          "when": "resourceScheme == file"
        }
      ],
      "view/item/context": [
        {
          "command": "pymakr.stopAllInProject",
          "group": "inline",
          "when": "viewItem =~ /(busy|mixed)#.+Children#.+?#project$/"
        },
        {
          "command": "pymakr.connectAllInProject",
          "group": "inline@9",
          "when": "viewItem =~ /(mixed|offline)Children#.+?#project$/"
        },
        {
          "command": "pymakr.disconnectAllInProject",
          "group": "inline@9",
          "when": "viewItem =~ /onlineChildren#.+?#project$/"
        },
        {
          "command": "pymakr.startDevMode",
          "group": "inline@10",
          "when": "viewItem =~ /Children#no-dev#project$/"
        },
        {
          "command": "pymakr.stopDevMode",
          "group": "inline@10",
          "when": "viewItem =~ /Children#dev#project$/"
        },
        {
          "command": "pymakr.addDeviceToFileExplorer",
          "group": "inline@10",
          "when": "viewItem =~ /.+#.+#device/"
        },
        {
          "command": "pymakr.downloadProject",
          "when": "viewItem =~ /.+#project#device/",
          "group": "inline@8"
        },
        {
          "command": "pymakr.uploadProject",
          "when": "viewItem =~ /.+#project#device/",
          "group": "inline@6"
        },
        {
          "command": "pymakr.createTerminalPrompt",
          "when": "viewItem =~ /.+#.+#device/",
          "group": "inline"
        },
        {
          "command": "pymakr.connect",
          "when": "viewItem =~ /offline#.+#device/",
          "group": "inline@50"
        },
        {
          "command": "pymakr.disconnect",
          "when": "viewItem =~ /(idle|busy)#.+#device/",
          "group": "inline@50"
        },
        {
          "submenu": "pymakr.projectDeviceMenu",
          "when": "viewItem =~ /.+#.+#device/",
          "group": "inline@100"
        },
        {
          "submenu": "pymakr.projectMenu",
          "when": "view == pymakr-projects-tree && viewItem =~ /project$/",
          "group": "inline@100"
        }
      ],
      "view/title": [
        {
          "submenu": "pymakr.newDeviceMenu",
          "when": "view == pymakr-devices-tree"
        },
        {
          "command": "pymakr.setVisibleDevices",
          "when": "view == pymakr-devices-tree"
        },
        {
          "command": "pymakr.createProjectPrompt",
          "group": "navigation",
          "when": "view == pymakr-projects-tree"
        }
      ],
      "explorer/context": [
        {
          "submenu": "pymakr.explorerContextMenu"
        }
      ],
      "editor/context": [
        {
          "submenu": "pymakr.editorContextMenu"
        }
      ],
      "editor/title": [
        {
          "submenu": "pymakr.editorContextMenu"
        }
      ]
    }
  },
  "scripts": {
    "lint": "eslint .",
    "build": "npm run build:docs && npm run build:binary",
    "build:docs": "typedoc src/pymakr.js --media media",
    "build:binary": "pkg src/terminal/bin/client.js --out-path src/terminal/bin --compress GZIP",
    "pretest.bak": "npm run lint",
    "test": "npm run test:types && npm run test:unit && npm run test:integration",
    "test:types": "tsc --noEmit",
    "test:unit": "probs src",
    "test:integration": "node ./test/runTest.js",
    "test-watch:unit": "npx nodemon --exec npm run test:unit",
    "prepackage": "npm run build:binary && node .github/workflows/preparePackage.js",
    "package": "vsce package --baseImagesUrl https://raw.githubusercontent.com/pycom/pymakr-vsc/next/"
  },
  "devDependencies": {
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/git": "^10.0.1",
    "@types/glob": "^7.2.0",
    "@types/node": "17.x",
    "@types/vscode": "^1.67.0",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^8.16.0",
    "glob": "^8.0.3",
    "pkg": "^5.7.0",
    "probs": "^1.1.0-16",
    "semantic-release": "^19.0.3",
    "semantic-release-vsce": "^5.0.13",
    "typedoc": "^0.22.16",
    "typescript": "^4.7.2"
  },
  "dependencies": {
    "@serialport/bindings-cpp": "^10.7.0",
    "@vscode/webview-ui-toolkit": "^1.0.0",
    "cheap-watch": "^1.0.4",
    "consolite": "^0.3.8",
    "hookar": "^0.0.7-0",
    "micropython-ctl-cont": "^1.15.3",
    "picomatch": "^2.3.1",
    "prompts": "^2.4.2",
    "serialport": "^10.4.0"
  },
  "volta": {
    "node": "16.14.2"
  },
  "__metadata": {
    "id": "a15a8fb0-6dbf-4a0c-8701-21ffb9bb4c64",
    "publisherDisplayName": "Pycom",
    "publisherId": "d3cdb74f-f67b-47fb-957a-d550bc26b6ba",
    "isPreReleaseVersion": false
  }
}
